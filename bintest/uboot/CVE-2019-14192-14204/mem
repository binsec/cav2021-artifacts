sp<32> := [0xff000000, 0xffff0000]u;
# armv7 abi requires 8 byte stack alignment
sp<32> := sp<32> & 0xfffffff8;
# nfs_handler constants
@[0x0005317c, 68] from_file;
# compute ip checksum
@[0x0004f114, 4] from_file;
# ip checksum ok
@[0x0004f134, 4] from_file;
# net_process_received_packet
@[0x00051510, 48] from_file;
# net_ip
@[0x000846d8, 4] := 0x01020304;
# push_packet
@[0x0008653c, 4] := 0<32>;
# net_native_vlan, net_our_vlan
@[0x0006af28, 4] from_file;
# packet
controlled packet<384>;
# The pointer where we store the packet.
# It depends on the network card.
# We put it on a fake heap.
packet_p<32> := [0xaaaa0000, 0xaaaabbbb]u;
r0<32> := packet_p<32>;
@[packet_p<32>, 48] := packet<384>;
# packet len
controlled len<32>;
# make len < 2014
len<32> := len<32> & 1023<32>;
r1<32> := len<32>;
# nfs_our_port
@[0x000865c8, 4] := 1000<32>;
# nfs_state, to go to nfs_readlink_reply
# controlled nfs_state
@[0x00086ddc, 4] := 7<32>;
# switch table
@[0x00052fa8, 28] from_file;
# rpc_id
# controlled rpc_id<32>
#@[0x00086de4, 4] := <32>;

# set the udp handler to nfs
@[0x00086550, 4] := 0x00052f78;
