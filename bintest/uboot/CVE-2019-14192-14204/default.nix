let
  nixpkgs_impure = import <nixpkgs> {};
  nixpkgs = nixpkgs_impure.fetchFromGitHub {
    owner = "nixos";
    repo = "nixpkgs";
    rev = "5f506b95f9f"; # 19.09 in november
    sha256 = "14ry2fs2pny2shlg2dq8c9vns636gv0zvfh0dmyy4bnq713k377n";
  };
  lib = import (nixpkgs + "/lib");
  pkgs = import nixpkgs {
    crossSystem = lib.systems.examples.armv7l-hf-multiplatform;
  };
in
pkgs.callPackage ({buildPackages, stdenv, ubootRaspberryPi3_32bit, SDL, flex, ncurses, pkg-config, bison, yacc}:
let mySDL = SDL.override {
  libGLSupported = false;
  openglSupport = false;
  libGL = null;
  libGLU = null;
  alsaSupport  = false;
  alsaLib = null;
  x11Support  = false;
  libXext = null;
  libICE = null;
  libXrandr = null;
  pulseaudioSupport  = false;
  libpulseaudio = false;
};
in
stdenv.mkDerivation {
  name = "uboot";
  inherit (ubootRaspberryPi3_32bit) src;

  nativeBuildInputs = [ buildPackages.stdenv.cc bison yacc flex ];
  depsBuildBuild = [ ncurses pkg-config ]; # for make menuconfig
  buildInputs = [ mySDL ];

  configurePhase = ''
    make rpi_0_w_defconfig
  '';

  makeFlags = [ "CROSS_COMPILE=armv7l-unknown-linux-gnueabihf-" ];

  installPhase = ''
    mv u-boot $out
  '';
  dontStrip = true;
}) {}
